

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 18 10:56:43 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000600                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _seg_char
    25  000600  3F                 	db	63
    26  000601  06                 	db	6
    27  000602  5B                 	db	91
    28  000603  4F                 	db	79
    29  000604  66                 	db	102
    30  000605  6D                 	db	109
    31  000606  7D                 	db	125
    32  000607  07                 	db	7
    33  000608  7F                 	db	127
    34  000609  6F                 	db	111
    35  00060A  39                 	db	57
    36  0000                     _TMR0	set	4054
    37  0000                     _ADCON0bits	set	4034
    38  0000                     _ADCON1	set	4033
    39  0000                     _ADCON2	set	4032
    40  0000                     _ADRESH	set	4036
    41  0000                     _ADRESL	set	4035
    42  0000                     _ANSELA	set	3896
    43  0000                     _ANSELD	set	3899
    44  0000                     _ANSELE	set	3900
    45  0000                     _PORTA	set	3968
    46  0000                     _PORTD	set	3971
    47  0000                     _T0CON	set	4053
    48  0000                     _TRISA	set	3986
    49  0000                     _TRISD	set	3989
    50  0000                     _TRISE	set	3990
    51  0000                     _GIE	set	32663
    52  0000                     _GODONE	set	32273
    53  0000                     _PEIE	set	32662
    54  0000                     _TMR0IE	set	32661
    55  0000                     _TMR0IF	set	32658
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  0005A8                     __pcinit:
    61                           	opt stack 0
    62  0005A8                     start_initialization:
    63                           	opt stack 0
    64  0005A8                     __initialization:
    65                           	opt stack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (15 bytes)
    68  0005A8  EE00  F041         	lfsr	0,__pbssCOMRAM
    69  0005AC  0E0F               	movlw	15
    70  0005AE                     clear_0:
    71  0005AE  6AEE               	clrf	postinc0,c
    72  0005B0  06E8               	decf	wreg,f,c
    73  0005B2  E1FD               	bnz	clear_0
    74                           
    75                           ; Initialize objects allocated to COMRAM (11 bytes)
    76                           ; load TBLPTR registers with __pidataCOMRAM
    77  0005B4  0E00               	movlw	low __pidataCOMRAM
    78  0005B6  6EF6               	movwf	tblptrl,c
    79  0005B8  0E06               	movlw	high __pidataCOMRAM
    80  0005BA  6EF7               	movwf	tblptrh,c
    81  0005BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    82  0005BE  6EF8               	movwf	tblptru,c
    83  0005C0  EE00  F050         	lfsr	0,__pdataCOMRAM
    84  0005C4  EE10 F00B          	lfsr	1,11
    85  0005C8                     copy_data0:
    86  0005C8  0009               	tblrd		*+
    87  0005CA  CFF5 FFEE          	movff	tablat,postinc0
    88  0005CE  50E5               	movf	postdec1,w,c
    89  0005D0  50E1               	movf	fsr1l,w,c
    90  0005D2  E1FA               	bnz	copy_data0
    91  0005D4                     end_of_initialization:
    92                           	opt stack 0
    93  0005D4                     __end_of__initialization:
    94                           	opt stack 0
    95  0005D4  0100               	movlb	0
    96  0005D6  EF82  F000         	goto	_main	;jump to C main() function
    97                           tblptru	equ	0xFF8
    98                           tblptrh	equ	0xFF7
    99                           tblptrl	equ	0xFF6
   100                           tablat	equ	0xFF5
   101                           postinc0	equ	0xFEE
   102                           wreg	equ	0xFE8
   103                           postdec1	equ	0xFE5
   104                           fsr1l	equ	0xFE1
   105                           
   106                           	psect	bssCOMRAM
   107  000041                     __pbssCOMRAM:
   108                           	opt stack 0
   109  000041                     _digits:
   110                           	opt stack 0
   111  000041                     	ds	4
   112  000045                     _temp:
   113                           	opt stack 0
   114  000045                     	ds	4
   115  000049                     _cnt:
   116                           	opt stack 0
   117  000049                     	ds	2
   118  00004B                     _cnt2:
   119                           	opt stack 0
   120  00004B                     	ds	2
   121  00004D                     _analog:
   122                           	opt stack 0
   123  00004D                     	ds	2
   124  00004F                     _dig_cnt:
   125                           	opt stack 0
   126  00004F                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           postinc0	equ	0xFEE
   132                           wreg	equ	0xFE8
   133                           postdec1	equ	0xFE5
   134                           fsr1l	equ	0xFE1
   135                           
   136                           	psect	dataCOMRAM
   137  000050                     __pdataCOMRAM:
   138                           	opt stack 0
   139  000050                     _seg_char:
   140                           	opt stack 0
   141  000050                     	ds	11
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           wreg	equ	0xFE8
   148                           postdec1	equ	0xFE5
   149                           fsr1l	equ	0xFE1
   150                           
   151                           	psect	cstackCOMRAM
   152  000001                     __pcstackCOMRAM:
   153                           	opt stack 0
   154  000001                     ??_isr:
   155                           
   156                           ; 0 bytes @ 0x0
   157  000001                     	ds	17
   158  000012                     ?___wmul:
   159                           	opt stack 0
   160  000012                     ?___lmul:
   161                           	opt stack 0
   162  000012                     ?___llmod:
   163                           	opt stack 0
   164  000012                     ___wmul@multiplier:
   165                           	opt stack 0
   166  000012                     ___lmul@multiplier:
   167                           	opt stack 0
   168  000012                     ___llmod@dividend:
   169                           	opt stack 0
   170                           
   171                           ; 4 bytes @ 0x11
   172  000012                     	ds	2
   173  000014                     ___wmul@multiplicand:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x13
   177  000014                     	ds	2
   178  000016                     ___wmul@product:
   179                           	opt stack 0
   180  000016                     ___lmul@multiplicand:
   181                           	opt stack 0
   182  000016                     ___llmod@divisor:
   183                           	opt stack 0
   184                           
   185                           ; 4 bytes @ 0x15
   186  000016                     	ds	2
   187  000018                     ?___lldiv:
   188                           	opt stack 0
   189  000018                     ___lldiv@dividend:
   190                           	opt stack 0
   191                           
   192                           ; 4 bytes @ 0x17
   193  000018                     	ds	2
   194  00001A                     ___llmod@counter:
   195                           	opt stack 0
   196  00001A                     ___lmul@product:
   197                           	opt stack 0
   198                           
   199                           ; 4 bytes @ 0x19
   200  00001A                     	ds	2
   201  00001C                     ___lldiv@divisor:
   202                           	opt stack 0
   203                           
   204                           ; 4 bytes @ 0x1B
   205  00001C                     	ds	2
   206  00001E                     ?___aldiv:
   207                           	opt stack 0
   208  00001E                     ___aldiv@dividend:
   209                           	opt stack 0
   210                           
   211                           ; 4 bytes @ 0x1D
   212  00001E                     	ds	2
   213  000020                     ___lldiv@quotient:
   214                           	opt stack 0
   215                           
   216                           ; 4 bytes @ 0x1F
   217  000020                     	ds	2
   218  000022                     ___aldiv@divisor:
   219                           	opt stack 0
   220                           
   221                           ; 4 bytes @ 0x21
   222  000022                     	ds	2
   223  000024                     ___lldiv@counter:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x23
   227  000024                     	ds	2
   228  000026                     ___aldiv@counter:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x25
   232  000026                     	ds	1
   233  000027                     ___aldiv@sign:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x26
   237  000027                     	ds	1
   238  000028                     ___aldiv@quotient:
   239                           	opt stack 0
   240                           
   241                           ; 4 bytes @ 0x27
   242  000028                     	ds	4
   243  00002C                     
   244                           ; 2 bytes @ 0x2B
   245  00002C                     	ds	2
   246  00002E                     
   247                           ; 3 bytes @ 0x2D
   248  00002E                     	ds	3
   249  000031                     ??_main:
   250                           
   251                           ; 0 bytes @ 0x30
   252  000031                     	ds	16
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           postdec1	equ	0xFE5
   260                           fsr1l	equ	0xFE1
   261                           
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 16, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 24 in file "C:/Users/FRED-NB/MPLABXProjects/18.10.2021.X/newmain.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  argc            2   43[COMRAM] int 
   270 ;;  argv            3   45[COMRAM] PTR PTR unsigned char 
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  2   43[COMRAM] int 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   282 ;;      Params:         5       0       0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0       0       0
   284 ;;      Temps:         16       0       0       0       0       0       0
   285 ;;      Totals:        21       0       0       0       0       0       0
   286 ;;Total ram usage:       21 bytes
   287 ;; Hardware stack levels required when called:    2
   288 ;; This function calls:
   289 ;;		___aldiv
   290 ;;		___lldiv
   291 ;;		___llmod
   292 ;;		___lmul
   293 ;;		___wmul
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  000104                     __ptext0:
   301                           	opt stack 0
   302  000104                     _main:
   303                           	opt stack 29
   304                           
   305                           ;newmain.c: 26: ANSELA = 0;
   306                           
   307                           ;incstack = 0
   308  000104  0E00               	movlw	0
   309  000106  010F               	movlb	15	; () banked
   310  000108  6F38               	movwf	56,b	;volatile
   311                           
   312                           ;newmain.c: 27: TRISA = 0xF0;
   313  00010A  0EF0               	movlw	240
   314  00010C  6E92               	movwf	3986,c	;volatile
   315                           
   316                           ;newmain.c: 28: PORTA = 0x00;
   317  00010E  0E00               	movlw	0
   318  000110  6E80               	movwf	3968,c	;volatile
   319                           
   320                           ;newmain.c: 30: ANSELD = 0;
   321  000112  0E00               	movlw	0
   322  000114  010F               	movlb	15	; () banked
   323  000116  6F3B               	movwf	59,b	;volatile
   324                           
   325                           ;newmain.c: 31: TRISD = 0x00;
   326  000118  0E00               	movlw	0
   327  00011A  6E95               	movwf	3989,c	;volatile
   328                           
   329                           ;newmain.c: 32: PORTD = 0;
   330  00011C  0E00               	movlw	0
   331  00011E  6E83               	movwf	3971,c	;volatile
   332                           
   333                           ;newmain.c: 34: ANSELE = 0x02;
   334  000120  0E02               	movlw	2
   335  000122  010F               	movlb	15	; () banked
   336  000124  6F3C               	movwf	60,b	;volatile
   337                           
   338                           ;newmain.c: 35: TRISE = 0x7F;
   339  000126  0E7F               	movlw	127
   340  000128  6E96               	movwf	3990,c	;volatile
   341                           
   342                           ;newmain.c: 37: T0CON = 0xC3;
   343  00012A  0EC3               	movlw	195
   344  00012C  6ED5               	movwf	4053,c	;volatile
   345                           
   346                           ;newmain.c: 39: ADCON2 = 0xA1;
   347  00012E  0EA1               	movlw	161
   348  000130  6EC0               	movwf	4032,c	;volatile
   349                           
   350                           ;newmain.c: 40: ADCON1 = 0x00;
   351  000132  0E00               	movlw	0
   352  000134  6EC1               	movwf	4033,c	;volatile
   353                           
   354                           ; BSR set to: 15
   355                           ;newmain.c: 41: ADCON0bits.CHS = 6;
   356  000136  94C2               	bcf	4034,2,c	;volatile
   357  000138  86C2               	bsf	4034,3,c	;volatile
   358  00013A  88C2               	bsf	4034,4,c	;volatile
   359  00013C  9AC2               	bcf	4034,5,c	;volatile
   360  00013E  9CC2               	bcf	4034,6,c	;volatile
   361                           
   362                           ; BSR set to: 15
   363                           ;newmain.c: 42: ADCON0bits.ADON = 1;
   364  000140  80C2               	bsf	4034,0,c	;volatile
   365                           
   366                           ; BSR set to: 15
   367                           ;newmain.c: 43: GODONE = 1;
   368  000142  82C2               	bsf	4034,1,c	;volatile
   369                           
   370                           ; BSR set to: 15
   371                           ;newmain.c: 45: TMR0IE = 1;
   372  000144  8AF2               	bsf	intcon,5,c	;volatile
   373                           
   374                           ; BSR set to: 15
   375                           ;newmain.c: 46: PEIE = 1;
   376  000146  8CF2               	bsf	intcon,6,c	;volatile
   377                           
   378                           ; BSR set to: 15
   379                           ;newmain.c: 47: GIE = 1;
   380  000148  8EF2               	bsf	intcon,7,c	;volatile
   381  00014A                     l765:
   382                           
   383                           ;newmain.c: 51: if (!GODONE) {
   384  00014A  B2C2               	btfsc	4034,1,c	;volatile
   385  00014C  D04A               	goto	l777
   386                           
   387                           ;newmain.c: 52: analog = (ADRESH & 0x03)*256 + ADRESL;
   388  00014E  CFC4 F031          	movff	4036,??_main	;volatile
   389  000152  0E03               	movlw	3
   390  000154  1631               	andwf	??_main,f,c
   391  000156  5031               	movf	??_main,w,c
   392  000158  6E33               	movwf	(??_main+2)& (0+255),c
   393  00015A  6A32               	clrf	(??_main+1)& (0+255),c
   394  00015C  50C3               	movf	4035,w,c	;volatile
   395  00015E  2432               	addwf	??_main+1,w,c
   396  000160  6E4D               	movwf	_analog,c
   397  000162  0E00               	movlw	0
   398  000164  2033               	addwfc	??_main+2,w,c
   399  000166  6E4E               	movwf	_analog+1,c
   400                           
   401                           ;newmain.c: 53: GODONE = 1;
   402  000168  82C2               	bsf	4034,1,c	;volatile
   403                           
   404                           ;newmain.c: 54: temp = (50000 * analog) / 1023;
   405  00016A  C04D  F012         	movff	_analog,___lmul@multiplier
   406  00016E  C04E  F013         	movff	_analog+1,___lmul@multiplier+1
   407  000172  6A14               	clrf	___lmul@multiplier+2,c
   408  000174  6A15               	clrf	___lmul@multiplier+3,c
   409  000176  0E50               	movlw	80
   410  000178  6E16               	movwf	___lmul@multiplicand,c
   411  00017A  0EC3               	movlw	195
   412  00017C  6E17               	movwf	___lmul@multiplicand+1,c
   413  00017E  0E00               	movlw	0
   414  000180  6E18               	movwf	___lmul@multiplicand+2,c
   415  000182  0E00               	movlw	0
   416  000184  6E19               	movwf	___lmul@multiplicand+3,c
   417  000186  ECA9  F002         	call	___lmul	;wreg free
   418  00018A  C012  F01E         	movff	?___lmul,___aldiv@dividend
   419  00018E  C013  F01F         	movff	?___lmul+1,___aldiv@dividend+1
   420  000192  C014  F020         	movff	?___lmul+2,___aldiv@dividend+2
   421  000196  C015  F021         	movff	?___lmul+3,___aldiv@dividend+3
   422  00019A  0EFF               	movlw	255
   423  00019C  6E22               	movwf	___aldiv@divisor,c
   424  00019E  0E03               	movlw	3
   425  0001A0  6E23               	movwf	___aldiv@divisor+1,c
   426  0001A2  0E00               	movlw	0
   427  0001A4  6E24               	movwf	___aldiv@divisor+2,c
   428  0001A6  0E00               	movlw	0
   429  0001A8  6E25               	movwf	___aldiv@divisor+3,c
   430  0001AA  ECB7  F001         	call	___aldiv	;wreg free
   431  0001AE  C01E  F045         	movff	?___aldiv,_temp
   432  0001B2  C01F  F046         	movff	?___aldiv+1,_temp+1
   433  0001B6  C020  F047         	movff	?___aldiv+2,_temp+2
   434  0001BA  C021  F048         	movff	?___aldiv+3,_temp+3
   435                           
   436                           ;newmain.c: 55: if (temp > 9999) {
   437  0001BE  0E10               	movlw	16
   438  0001C0  5C45               	subwf	_temp,w,c
   439  0001C2  0E27               	movlw	39
   440  0001C4  5846               	subwfb	_temp+1,w,c
   441  0001C6  0E00               	movlw	0
   442  0001C8  5847               	subwfb	_temp+2,w,c
   443  0001CA  0E00               	movlw	0
   444  0001CC  5848               	subwfb	_temp+3,w,c
   445  0001CE  A0D8               	btfss	status,0,c
   446  0001D0  D008               	goto	l777
   447                           
   448                           ;newmain.c: 56: temp = 9999;
   449  0001D2  0E0F               	movlw	15
   450  0001D4  6E45               	movwf	_temp,c
   451  0001D6  0E27               	movlw	39
   452  0001D8  6E46               	movwf	_temp+1,c
   453  0001DA  0E00               	movlw	0
   454  0001DC  6E47               	movwf	_temp+2,c
   455  0001DE  0E00               	movlw	0
   456  0001E0  6E48               	movwf	_temp+3,c
   457  0001E2                     l777:
   458                           
   459                           ;newmain.c: 57: }
   460                           ;newmain.c: 58: }
   461                           ;newmain.c: 63: digits[3] = temp / 1000;
   462  0001E2  C045  F018         	movff	_temp,___lldiv@dividend
   463  0001E6  C046  F019         	movff	_temp+1,___lldiv@dividend+1
   464  0001EA  C047  F01A         	movff	_temp+2,___lldiv@dividend+2
   465  0001EE  C048  F01B         	movff	_temp+3,___lldiv@dividend+3
   466  0001F2  0EE8               	movlw	232
   467  0001F4  6E1C               	movwf	___lldiv@divisor,c
   468  0001F6  0E03               	movlw	3
   469  0001F8  6E1D               	movwf	___lldiv@divisor+1,c
   470  0001FA  0E00               	movlw	0
   471  0001FC  6E1E               	movwf	___lldiv@divisor+2,c
   472  0001FE  0E00               	movlw	0
   473  000200  6E1F               	movwf	___lldiv@divisor+3,c
   474  000202  EC35  F002         	call	___lldiv	;wreg free
   475  000206  C018  F031         	movff	?___lldiv,??_main
   476  00020A  C019  F032         	movff	?___lldiv+1,??_main+1
   477  00020E  C01A  F033         	movff	?___lldiv+2,??_main+2
   478  000212  C01B  F034         	movff	?___lldiv+3,??_main+3
   479  000216  5031               	movf	??_main,w,c
   480  000218  6E44               	movwf	_digits+3,c
   481                           
   482                           ;newmain.c: 64: digits[2] = (temp - digits[3]*1000) / 100;
   483  00021A  C044  F012         	movff	_digits+3,___wmul@multiplier
   484  00021E  6A13               	clrf	___wmul@multiplier+1,c
   485  000220  0E03               	movlw	3
   486  000222  6E15               	movwf	___wmul@multiplicand+1,c
   487  000224  0EE8               	movlw	232
   488  000226  6E14               	movwf	___wmul@multiplicand,c
   489  000228  ECED  F002         	call	___wmul	;wreg free
   490  00022C  C012  F031         	movff	?___wmul,??_main
   491  000230  C013  F032         	movff	?___wmul+1,??_main+1
   492  000234  0E00               	movlw	0
   493  000236  BE32               	btfsc	(??_main+1)& (0+255),7,c
   494  000238  0EFF               	movlw	255
   495  00023A  6E33               	movwf	(??_main+2)& (0+255),c
   496  00023C  6E34               	movwf	(??_main+3)& (0+255),c
   497  00023E  1E31               	comf	??_main,f,c
   498  000240  1E32               	comf	??_main+1,f,c
   499  000242  1E33               	comf	??_main+2,f,c
   500  000244  1E34               	comf	??_main+3,f,c
   501  000246  2A31               	incf	??_main,f,c
   502  000248  0E00               	movlw	0
   503  00024A  2232               	addwfc	??_main+1,f,c
   504  00024C  2233               	addwfc	??_main+2,f,c
   505  00024E  2234               	addwfc	??_main+3,f,c
   506  000250  5045               	movf	_temp,w,c
   507  000252  2431               	addwf	??_main,w,c
   508  000254  6E18               	movwf	___lldiv@dividend,c
   509  000256  5046               	movf	_temp+1,w,c
   510  000258  2032               	addwfc	??_main+1,w,c
   511  00025A  6E19               	movwf	___lldiv@dividend+1,c
   512  00025C  5047               	movf	_temp+2,w,c
   513  00025E  2033               	addwfc	??_main+2,w,c
   514  000260  6E1A               	movwf	___lldiv@dividend+2,c
   515  000262  5048               	movf	_temp+3,w,c
   516  000264  2034               	addwfc	??_main+3,w,c
   517  000266  6E1B               	movwf	___lldiv@dividend+3,c
   518  000268  0E64               	movlw	100
   519  00026A  6E1C               	movwf	___lldiv@divisor,c
   520  00026C  0E00               	movlw	0
   521  00026E  6E1D               	movwf	___lldiv@divisor+1,c
   522  000270  0E00               	movlw	0
   523  000272  6E1E               	movwf	___lldiv@divisor+2,c
   524  000274  0E00               	movlw	0
   525  000276  6E1F               	movwf	___lldiv@divisor+3,c
   526  000278  EC35  F002         	call	___lldiv	;wreg free
   527  00027C  C018  F035         	movff	?___lldiv,??_main+4
   528  000280  C019  F036         	movff	?___lldiv+1,??_main+5
   529  000284  C01A  F037         	movff	?___lldiv+2,??_main+6
   530  000288  C01B  F038         	movff	?___lldiv+3,??_main+7
   531  00028C  5035               	movf	??_main+4,w,c
   532  00028E  6E43               	movwf	_digits+2,c
   533                           
   534                           ;newmain.c: 65: digits[1] = (temp - digits[3]*1000 - digits[2]*100) / 10;
   535  000290  5043               	movf	_digits+2,w,c
   536  000292  0D64               	mullw	100
   537  000294  CFF3 F031          	movff	prodl,??_main
   538  000298  CFF4 F032          	movff	prodh,??_main+1
   539  00029C  0E00               	movlw	0
   540  00029E  BE32               	btfsc	(??_main+1)& (0+255),7,c
   541  0002A0  0EFF               	movlw	255
   542  0002A2  6E33               	movwf	(??_main+2)& (0+255),c
   543  0002A4  6E34               	movwf	(??_main+3)& (0+255),c
   544  0002A6  C044  F012         	movff	_digits+3,___wmul@multiplier
   545  0002AA  6A13               	clrf	___wmul@multiplier+1,c
   546  0002AC  0E03               	movlw	3
   547  0002AE  6E15               	movwf	___wmul@multiplicand+1,c
   548  0002B0  0EE8               	movlw	232
   549  0002B2  6E14               	movwf	___wmul@multiplicand,c
   550  0002B4  ECED  F002         	call	___wmul	;wreg free
   551  0002B8  C012  F035         	movff	?___wmul,??_main+4
   552  0002BC  C013  F036         	movff	?___wmul+1,??_main+5
   553  0002C0  0E00               	movlw	0
   554  0002C2  BE36               	btfsc	(??_main+5)& (0+255),7,c
   555  0002C4  0EFF               	movlw	255
   556  0002C6  6E37               	movwf	(??_main+6)& (0+255),c
   557  0002C8  6E38               	movwf	(??_main+7)& (0+255),c
   558  0002CA  5031               	movf	??_main,w,c
   559  0002CC  2435               	addwf	??_main+4,w,c
   560  0002CE  6E39               	movwf	(??_main+8)& (0+255),c
   561  0002D0  5032               	movf	??_main+1,w,c
   562  0002D2  2036               	addwfc	??_main+5,w,c
   563  0002D4  6E3A               	movwf	(??_main+9)& (0+255),c
   564  0002D6  5033               	movf	??_main+2,w,c
   565  0002D8  2037               	addwfc	??_main+6,w,c
   566  0002DA  6E3B               	movwf	(??_main+10)& (0+255),c
   567  0002DC  5034               	movf	??_main+3,w,c
   568  0002DE  2038               	addwfc	??_main+7,w,c
   569  0002E0  6E3C               	movwf	(??_main+11)& (0+255),c
   570  0002E2  1E39               	comf	??_main+8,f,c
   571  0002E4  1E3A               	comf	??_main+9,f,c
   572  0002E6  1E3B               	comf	??_main+10,f,c
   573  0002E8  1E3C               	comf	??_main+11,f,c
   574  0002EA  2A39               	incf	??_main+8,f,c
   575  0002EC  0E00               	movlw	0
   576  0002EE  223A               	addwfc	??_main+9,f,c
   577  0002F0  223B               	addwfc	??_main+10,f,c
   578  0002F2  223C               	addwfc	??_main+11,f,c
   579  0002F4  5045               	movf	_temp,w,c
   580  0002F6  2439               	addwf	??_main+8,w,c
   581  0002F8  6E18               	movwf	___lldiv@dividend,c
   582  0002FA  5046               	movf	_temp+1,w,c
   583  0002FC  203A               	addwfc	??_main+9,w,c
   584  0002FE  6E19               	movwf	___lldiv@dividend+1,c
   585  000300  5047               	movf	_temp+2,w,c
   586  000302  203B               	addwfc	??_main+10,w,c
   587  000304  6E1A               	movwf	___lldiv@dividend+2,c
   588  000306  5048               	movf	_temp+3,w,c
   589  000308  203C               	addwfc	??_main+11,w,c
   590  00030A  6E1B               	movwf	___lldiv@dividend+3,c
   591  00030C  0E0A               	movlw	10
   592  00030E  6E1C               	movwf	___lldiv@divisor,c
   593  000310  0E00               	movlw	0
   594  000312  6E1D               	movwf	___lldiv@divisor+1,c
   595  000314  0E00               	movlw	0
   596  000316  6E1E               	movwf	___lldiv@divisor+2,c
   597  000318  0E00               	movlw	0
   598  00031A  6E1F               	movwf	___lldiv@divisor+3,c
   599  00031C  EC35  F002         	call	___lldiv	;wreg free
   600  000320  C018  F03D         	movff	?___lldiv,??_main+12
   601  000324  C019  F03E         	movff	?___lldiv+1,??_main+13
   602  000328  C01A  F03F         	movff	?___lldiv+2,??_main+14
   603  00032C  C01B  F040         	movff	?___lldiv+3,??_main+15
   604  000330  503D               	movf	??_main+12,w,c
   605  000332  6E42               	movwf	_digits+1,c
   606                           
   607                           ;newmain.c: 66: digits[0] = temp % 10;
   608  000334  C045  F012         	movff	_temp,___llmod@dividend
   609  000338  C046  F013         	movff	_temp+1,___llmod@dividend+1
   610  00033C  C047  F014         	movff	_temp+2,___llmod@dividend+2
   611  000340  C048  F015         	movff	_temp+3,___llmod@dividend+3
   612  000344  0E0A               	movlw	10
   613  000346  6E16               	movwf	___llmod@divisor,c
   614  000348  0E00               	movlw	0
   615  00034A  6E17               	movwf	___llmod@divisor+1,c
   616  00034C  0E00               	movlw	0
   617  00034E  6E18               	movwf	___llmod@divisor+2,c
   618  000350  0E00               	movlw	0
   619  000352  6E19               	movwf	___llmod@divisor+3,c
   620  000354  EC76  F002         	call	___llmod	;wreg free
   621  000358  C012  F031         	movff	?___llmod,??_main
   622  00035C  C013  F032         	movff	?___llmod+1,??_main+1
   623  000360  C014  F033         	movff	?___llmod+2,??_main+2
   624  000364  C015  F034         	movff	?___llmod+3,??_main+3
   625  000368  5031               	movf	??_main,w,c
   626  00036A  6E41               	movwf	_digits,c
   627  00036C  D6EE               	goto	l765
   628  00036E                     __end_of_main:
   629                           	opt stack 0
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           prodh	equ	0xFF4
   635                           prodl	equ	0xFF3
   636                           intcon	equ	0xFF2
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           status	equ	0xFD8
   642                           
   643 ;; *************** function ___wmul *****************
   644 ;; Defined at:
   645 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  multiplier      2   17[COMRAM] unsigned int 
   648 ;;  multiplicand    2   19[COMRAM] unsigned int 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  product         2   21[COMRAM] unsigned int 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  2   17[COMRAM] unsigned int 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, prodl, prodh
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   660 ;;      Params:         4       0       0       0       0       0       0
   661 ;;      Locals:         2       0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0
   663 ;;      Totals:         6       0       0       0       0       0       0
   664 ;;Total ram usage:        6 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text1
   675  0005DA                     __ptext1:
   676                           	opt stack 0
   677  0005DA                     ___wmul:
   678                           	opt stack 29
   679                           
   680                           ;incstack = 0
   681  0005DA  5012               	movf	___wmul@multiplier,w,c
   682  0005DC  0214               	mulwf	___wmul@multiplicand,c
   683  0005DE  CFF3 F016          	movff	prodl,___wmul@product
   684  0005E2  CFF4 F017          	movff	prodh,___wmul@product+1
   685  0005E6  5012               	movf	___wmul@multiplier,w,c
   686  0005E8  0215               	mulwf	___wmul@multiplicand+1,c
   687  0005EA  50F3               	movf	prodl,w,c
   688  0005EC  2617               	addwf	___wmul@product+1,f,c
   689  0005EE  5013               	movf	___wmul@multiplier+1,w,c
   690  0005F0  0214               	mulwf	___wmul@multiplicand,c
   691  0005F2  50F3               	movf	prodl,w,c
   692  0005F4  2617               	addwf	___wmul@product+1,f,c
   693  0005F6  C016  F012         	movff	___wmul@product,?___wmul
   694  0005FA  C017  F013         	movff	___wmul@product+1,?___wmul+1
   695  0005FE  0012               	return	
   696  000600                     __end_of___wmul:
   697                           	opt stack 0
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           prodh	equ	0xFF4
   703                           prodl	equ	0xFF3
   704                           intcon	equ	0xFF2
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           status	equ	0xFD8
   710                           
   711 ;; *************** function ___lmul *****************
   712 ;; Defined at:
   713 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  multiplier      4   17[COMRAM] unsigned long 
   716 ;;  multiplicand    4   21[COMRAM] unsigned long 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  product         4   25[COMRAM] unsigned long 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  4   17[COMRAM] unsigned long 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   728 ;;      Params:         8       0       0       0       0       0       0
   729 ;;      Locals:         4       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0
   731 ;;      Totals:        12       0       0       0       0       0       0
   732 ;;Total ram usage:       12 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text2
   743  000552                     __ptext2:
   744                           	opt stack 0
   745  000552                     ___lmul:
   746                           	opt stack 29
   747                           
   748                           ;incstack = 0
   749  000552  0E00               	movlw	0
   750  000554  6E1A               	movwf	___lmul@product,c
   751  000556  0E00               	movlw	0
   752  000558  6E1B               	movwf	___lmul@product+1,c
   753  00055A  0E00               	movlw	0
   754  00055C  6E1C               	movwf	___lmul@product+2,c
   755  00055E  0E00               	movlw	0
   756  000560  6E1D               	movwf	___lmul@product+3,c
   757  000562                     l661:
   758  000562  A012               	btfss	___lmul@multiplier,0,c
   759  000564  D008               	goto	l665
   760  000566  5016               	movf	___lmul@multiplicand,w,c
   761  000568  261A               	addwf	___lmul@product,f,c
   762  00056A  5017               	movf	___lmul@multiplicand+1,w,c
   763  00056C  221B               	addwfc	___lmul@product+1,f,c
   764  00056E  5018               	movf	___lmul@multiplicand+2,w,c
   765  000570  221C               	addwfc	___lmul@product+2,f,c
   766  000572  5019               	movf	___lmul@multiplicand+3,w,c
   767  000574  221D               	addwfc	___lmul@product+3,f,c
   768  000576                     l665:
   769  000576  90D8               	bcf	status,0,c
   770  000578  3616               	rlcf	___lmul@multiplicand,f,c
   771  00057A  3617               	rlcf	___lmul@multiplicand+1,f,c
   772  00057C  3618               	rlcf	___lmul@multiplicand+2,f,c
   773  00057E  3619               	rlcf	___lmul@multiplicand+3,f,c
   774  000580  90D8               	bcf	status,0,c
   775  000582  3215               	rrcf	___lmul@multiplier+3,f,c
   776  000584  3214               	rrcf	___lmul@multiplier+2,f,c
   777  000586  3213               	rrcf	___lmul@multiplier+1,f,c
   778  000588  3212               	rrcf	___lmul@multiplier,f,c
   779  00058A  5015               	movf	___lmul@multiplier+3,w,c
   780  00058C  1012               	iorwf	___lmul@multiplier,w,c
   781  00058E  1013               	iorwf	___lmul@multiplier+1,w,c
   782  000590  1014               	iorwf	___lmul@multiplier+2,w,c
   783  000592  A4D8               	btfss	status,2,c
   784  000594  D7E6               	goto	l661
   785  000596  C01A  F012         	movff	___lmul@product,?___lmul
   786  00059A  C01B  F013         	movff	___lmul@product+1,?___lmul+1
   787  00059E  C01C  F014         	movff	___lmul@product+2,?___lmul+2
   788  0005A2  C01D  F015         	movff	___lmul@product+3,?___lmul+3
   789  0005A6  0012               	return	
   790  0005A8                     __end_of___lmul:
   791                           	opt stack 0
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           prodh	equ	0xFF4
   797                           prodl	equ	0xFF3
   798                           intcon	equ	0xFF2
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           postdec1	equ	0xFE5
   802                           fsr1l	equ	0xFE1
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function ___llmod *****************
   806 ;; Defined at:
   807 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  dividend        4   17[COMRAM] unsigned long 
   810 ;;  divisor         4   21[COMRAM] unsigned long 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  counter         1   25[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  4   17[COMRAM] unsigned long 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   822 ;;      Params:         8       0       0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0
   825 ;;      Totals:         9       0       0       0       0       0       0
   826 ;;Total ram usage:        9 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text3
   837  0004EC                     __ptext3:
   838                           	opt stack 0
   839  0004EC                     ___llmod:
   840                           	opt stack 29
   841                           
   842                           ;incstack = 0
   843  0004EC  5019               	movf	___llmod@divisor+3,w,c
   844  0004EE  1016               	iorwf	___llmod@divisor,w,c
   845  0004F0  1017               	iorwf	___llmod@divisor+1,w,c
   846  0004F2  1018               	iorwf	___llmod@divisor+2,w,c
   847  0004F4  B4D8               	btfsc	status,2,c
   848  0004F6  D024               	goto	l531
   849  0004F8  0E01               	movlw	1
   850  0004FA  6E1A               	movwf	___llmod@counter,c
   851  0004FC  D006               	goto	l741
   852  0004FE                     l739:
   853  0004FE  90D8               	bcf	status,0,c
   854  000500  3616               	rlcf	___llmod@divisor,f,c
   855  000502  3617               	rlcf	___llmod@divisor+1,f,c
   856  000504  3618               	rlcf	___llmod@divisor+2,f,c
   857  000506  3619               	rlcf	___llmod@divisor+3,f,c
   858  000508  2A1A               	incf	___llmod@counter,f,c
   859  00050A                     l741:
   860  00050A  AE19               	btfss	___llmod@divisor+3,7,c
   861  00050C  D7F8               	goto	l739
   862  00050E                     l743:
   863  00050E  5016               	movf	___llmod@divisor,w,c
   864  000510  5C12               	subwf	___llmod@dividend,w,c
   865  000512  5017               	movf	___llmod@divisor+1,w,c
   866  000514  5813               	subwfb	___llmod@dividend+1,w,c
   867  000516  5018               	movf	___llmod@divisor+2,w,c
   868  000518  5814               	subwfb	___llmod@dividend+2,w,c
   869  00051A  5019               	movf	___llmod@divisor+3,w,c
   870  00051C  5815               	subwfb	___llmod@dividend+3,w,c
   871  00051E  A0D8               	btfss	status,0,c
   872  000520  D008               	goto	l747
   873  000522  5016               	movf	___llmod@divisor,w,c
   874  000524  5E12               	subwf	___llmod@dividend,f,c
   875  000526  5017               	movf	___llmod@divisor+1,w,c
   876  000528  5A13               	subwfb	___llmod@dividend+1,f,c
   877  00052A  5018               	movf	___llmod@divisor+2,w,c
   878  00052C  5A14               	subwfb	___llmod@dividend+2,f,c
   879  00052E  5019               	movf	___llmod@divisor+3,w,c
   880  000530  5A15               	subwfb	___llmod@dividend+3,f,c
   881  000532                     l747:
   882  000532  90D8               	bcf	status,0,c
   883  000534  3219               	rrcf	___llmod@divisor+3,f,c
   884  000536  3218               	rrcf	___llmod@divisor+2,f,c
   885  000538  3217               	rrcf	___llmod@divisor+1,f,c
   886  00053A  3216               	rrcf	___llmod@divisor,f,c
   887  00053C  2E1A               	decfsz	___llmod@counter,f,c
   888  00053E  D7E7               	goto	l743
   889  000540                     l531:
   890  000540  C012  F012         	movff	___llmod@dividend,?___llmod
   891  000544  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
   892  000548  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
   893  00054C  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
   894  000550  0012               	return	
   895  000552                     __end_of___llmod:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           prodh	equ	0xFF4
   902                           prodl	equ	0xFF3
   903                           intcon	equ	0xFF2
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           postdec1	equ	0xFE5
   907                           fsr1l	equ	0xFE1
   908                           status	equ	0xFD8
   909                           
   910 ;; *************** function ___lldiv *****************
   911 ;; Defined at:
   912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  dividend        4   23[COMRAM] unsigned long 
   915 ;;  divisor         4   27[COMRAM] unsigned long 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  quotient        4   31[COMRAM] unsigned long 
   918 ;;  counter         1   35[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  4   23[COMRAM] unsigned long 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   928 ;;      Params:         8       0       0       0       0       0       0
   929 ;;      Locals:         5       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0
   931 ;;      Totals:        13       0       0       0       0       0       0
   932 ;;Total ram usage:       13 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text4
   943  00046A                     __ptext4:
   944                           	opt stack 0
   945  00046A                     ___lldiv:
   946                           	opt stack 29
   947                           
   948                           ;incstack = 0
   949  00046A  0E00               	movlw	0
   950  00046C  6E20               	movwf	___lldiv@quotient,c
   951  00046E  0E00               	movlw	0
   952  000470  6E21               	movwf	___lldiv@quotient+1,c
   953  000472  0E00               	movlw	0
   954  000474  6E22               	movwf	___lldiv@quotient+2,c
   955  000476  0E00               	movlw	0
   956  000478  6E23               	movwf	___lldiv@quotient+3,c
   957  00047A  501F               	movf	___lldiv@divisor+3,w,c
   958  00047C  101C               	iorwf	___lldiv@divisor,w,c
   959  00047E  101D               	iorwf	___lldiv@divisor+1,w,c
   960  000480  101E               	iorwf	___lldiv@divisor+2,w,c
   961  000482  B4D8               	btfsc	status,2,c
   962  000484  D02A               	goto	l521
   963  000486  0E01               	movlw	1
   964  000488  6E24               	movwf	___lldiv@counter,c
   965  00048A  D006               	goto	l721
   966  00048C                     l719:
   967  00048C  90D8               	bcf	status,0,c
   968  00048E  361C               	rlcf	___lldiv@divisor,f,c
   969  000490  361D               	rlcf	___lldiv@divisor+1,f,c
   970  000492  361E               	rlcf	___lldiv@divisor+2,f,c
   971  000494  361F               	rlcf	___lldiv@divisor+3,f,c
   972  000496  2A24               	incf	___lldiv@counter,f,c
   973  000498                     l721:
   974  000498  AE1F               	btfss	___lldiv@divisor+3,7,c
   975  00049A  D7F8               	goto	l719
   976  00049C                     l723:
   977  00049C  90D8               	bcf	status,0,c
   978  00049E  3620               	rlcf	___lldiv@quotient,f,c
   979  0004A0  3621               	rlcf	___lldiv@quotient+1,f,c
   980  0004A2  3622               	rlcf	___lldiv@quotient+2,f,c
   981  0004A4  3623               	rlcf	___lldiv@quotient+3,f,c
   982  0004A6  501C               	movf	___lldiv@divisor,w,c
   983  0004A8  5C18               	subwf	___lldiv@dividend,w,c
   984  0004AA  501D               	movf	___lldiv@divisor+1,w,c
   985  0004AC  5819               	subwfb	___lldiv@dividend+1,w,c
   986  0004AE  501E               	movf	___lldiv@divisor+2,w,c
   987  0004B0  581A               	subwfb	___lldiv@dividend+2,w,c
   988  0004B2  501F               	movf	___lldiv@divisor+3,w,c
   989  0004B4  581B               	subwfb	___lldiv@dividend+3,w,c
   990  0004B6  A0D8               	btfss	status,0,c
   991  0004B8  D009               	goto	l731
   992  0004BA  501C               	movf	___lldiv@divisor,w,c
   993  0004BC  5E18               	subwf	___lldiv@dividend,f,c
   994  0004BE  501D               	movf	___lldiv@divisor+1,w,c
   995  0004C0  5A19               	subwfb	___lldiv@dividend+1,f,c
   996  0004C2  501E               	movf	___lldiv@divisor+2,w,c
   997  0004C4  5A1A               	subwfb	___lldiv@dividend+2,f,c
   998  0004C6  501F               	movf	___lldiv@divisor+3,w,c
   999  0004C8  5A1B               	subwfb	___lldiv@dividend+3,f,c
  1000  0004CA  8020               	bsf	___lldiv@quotient,0,c
  1001  0004CC                     l731:
  1002  0004CC  90D8               	bcf	status,0,c
  1003  0004CE  321F               	rrcf	___lldiv@divisor+3,f,c
  1004  0004D0  321E               	rrcf	___lldiv@divisor+2,f,c
  1005  0004D2  321D               	rrcf	___lldiv@divisor+1,f,c
  1006  0004D4  321C               	rrcf	___lldiv@divisor,f,c
  1007  0004D6  2E24               	decfsz	___lldiv@counter,f,c
  1008  0004D8  D7E1               	goto	l723
  1009  0004DA                     l521:
  1010  0004DA  C020  F018         	movff	___lldiv@quotient,?___lldiv
  1011  0004DE  C021  F019         	movff	___lldiv@quotient+1,?___lldiv+1
  1012  0004E2  C022  F01A         	movff	___lldiv@quotient+2,?___lldiv+2
  1013  0004E6  C023  F01B         	movff	___lldiv@quotient+3,?___lldiv+3
  1014  0004EA  0012               	return	
  1015  0004EC                     __end_of___lldiv:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           prodh	equ	0xFF4
  1022                           prodl	equ	0xFF3
  1023                           intcon	equ	0xFF2
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           postdec1	equ	0xFE5
  1027                           fsr1l	equ	0xFE1
  1028                           status	equ	0xFD8
  1029                           
  1030 ;; *************** function ___aldiv *****************
  1031 ;; Defined at:
  1032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  dividend        4   29[COMRAM] long 
  1035 ;;  divisor         4   33[COMRAM] long 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  quotient        4   39[COMRAM] long 
  1038 ;;  sign            1   38[COMRAM] unsigned char 
  1039 ;;  counter         1   37[COMRAM] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  4   29[COMRAM] long 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1049 ;;      Params:         8       0       0       0       0       0       0
  1050 ;;      Locals:         6       0       0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0
  1052 ;;      Totals:        14       0       0       0       0       0       0
  1053 ;;Total ram usage:       14 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text5
  1064  00036E                     __ptext5:
  1065                           	opt stack 0
  1066  00036E                     ___aldiv:
  1067                           	opt stack 29
  1068                           
  1069                           ;incstack = 0
  1070  00036E  0E00               	movlw	0
  1071  000370  6E27               	movwf	___aldiv@sign,c
  1072  000372  5025               	movf	___aldiv@divisor+3,w,c
  1073  000374  0A80               	xorlw	128
  1074  000376  0F80               	addlw	128
  1075  000378  E108               	bnz	u35
  1076  00037A  0E00               	movlw	0
  1077  00037C  5C24               	subwf	___aldiv@divisor+2,w,c
  1078  00037E  E105               	bnz	u35
  1079  000380  0E00               	movlw	0
  1080  000382  5C23               	subwf	___aldiv@divisor+1,w,c
  1081  000384  E102               	bnz	u35
  1082  000386  0E00               	movlw	0
  1083  000388  5C22               	subwf	___aldiv@divisor,w,c
  1084  00038A                     u35:
  1085  00038A  B0D8               	btfsc	status,0,c
  1086  00038C  D00A               	goto	l677
  1087  00038E  1E25               	comf	___aldiv@divisor+3,f,c
  1088  000390  1E24               	comf	___aldiv@divisor+2,f,c
  1089  000392  1E23               	comf	___aldiv@divisor+1,f,c
  1090  000394  6C22               	negf	___aldiv@divisor,c
  1091  000396  0E00               	movlw	0
  1092  000398  2223               	addwfc	___aldiv@divisor+1,f,c
  1093  00039A  2224               	addwfc	___aldiv@divisor+2,f,c
  1094  00039C  2225               	addwfc	___aldiv@divisor+3,f,c
  1095  00039E  0E01               	movlw	1
  1096  0003A0  6E27               	movwf	___aldiv@sign,c
  1097  0003A2                     l677:
  1098  0003A2  5021               	movf	___aldiv@dividend+3,w,c
  1099  0003A4  0A80               	xorlw	128
  1100  0003A6  0F80               	addlw	128
  1101  0003A8  E108               	bnz	u45
  1102  0003AA  0E00               	movlw	0
  1103  0003AC  5C20               	subwf	___aldiv@dividend+2,w,c
  1104  0003AE  E105               	bnz	u45
  1105  0003B0  0E00               	movlw	0
  1106  0003B2  5C1F               	subwf	___aldiv@dividend+1,w,c
  1107  0003B4  E102               	bnz	u45
  1108  0003B6  0E00               	movlw	0
  1109  0003B8  5C1E               	subwf	___aldiv@dividend,w,c
  1110  0003BA                     u45:
  1111  0003BA  B0D8               	btfsc	status,0,c
  1112  0003BC  D00A               	goto	l683
  1113  0003BE  1E21               	comf	___aldiv@dividend+3,f,c
  1114  0003C0  1E20               	comf	___aldiv@dividend+2,f,c
  1115  0003C2  1E1F               	comf	___aldiv@dividend+1,f,c
  1116  0003C4  6C1E               	negf	___aldiv@dividend,c
  1117  0003C6  0E00               	movlw	0
  1118  0003C8  221F               	addwfc	___aldiv@dividend+1,f,c
  1119  0003CA  2220               	addwfc	___aldiv@dividend+2,f,c
  1120  0003CC  2221               	addwfc	___aldiv@dividend+3,f,c
  1121  0003CE  0E01               	movlw	1
  1122  0003D0  1A27               	xorwf	___aldiv@sign,f,c
  1123  0003D2                     l683:
  1124  0003D2  0E00               	movlw	0
  1125  0003D4  6E28               	movwf	___aldiv@quotient,c
  1126  0003D6  0E00               	movlw	0
  1127  0003D8  6E29               	movwf	___aldiv@quotient+1,c
  1128  0003DA  0E00               	movlw	0
  1129  0003DC  6E2A               	movwf	___aldiv@quotient+2,c
  1130  0003DE  0E00               	movlw	0
  1131  0003E0  6E2B               	movwf	___aldiv@quotient+3,c
  1132  0003E2  5025               	movf	___aldiv@divisor+3,w,c
  1133  0003E4  1022               	iorwf	___aldiv@divisor,w,c
  1134  0003E6  1023               	iorwf	___aldiv@divisor+1,w,c
  1135  0003E8  1024               	iorwf	___aldiv@divisor+2,w,c
  1136  0003EA  B4D8               	btfsc	status,2,c
  1137  0003EC  D02A               	goto	l705
  1138  0003EE  0E01               	movlw	1
  1139  0003F0  6E26               	movwf	___aldiv@counter,c
  1140  0003F2  D006               	goto	l691
  1141  0003F4                     l689:
  1142  0003F4  90D8               	bcf	status,0,c
  1143  0003F6  3622               	rlcf	___aldiv@divisor,f,c
  1144  0003F8  3623               	rlcf	___aldiv@divisor+1,f,c
  1145  0003FA  3624               	rlcf	___aldiv@divisor+2,f,c
  1146  0003FC  3625               	rlcf	___aldiv@divisor+3,f,c
  1147  0003FE  2A26               	incf	___aldiv@counter,f,c
  1148  000400                     l691:
  1149  000400  AE25               	btfss	___aldiv@divisor+3,7,c
  1150  000402  D7F8               	goto	l689
  1151  000404                     l693:
  1152  000404  90D8               	bcf	status,0,c
  1153  000406  3628               	rlcf	___aldiv@quotient,f,c
  1154  000408  3629               	rlcf	___aldiv@quotient+1,f,c
  1155  00040A  362A               	rlcf	___aldiv@quotient+2,f,c
  1156  00040C  362B               	rlcf	___aldiv@quotient+3,f,c
  1157  00040E  5022               	movf	___aldiv@divisor,w,c
  1158  000410  5C1E               	subwf	___aldiv@dividend,w,c
  1159  000412  5023               	movf	___aldiv@divisor+1,w,c
  1160  000414  581F               	subwfb	___aldiv@dividend+1,w,c
  1161  000416  5024               	movf	___aldiv@divisor+2,w,c
  1162  000418  5820               	subwfb	___aldiv@dividend+2,w,c
  1163  00041A  5025               	movf	___aldiv@divisor+3,w,c
  1164  00041C  5821               	subwfb	___aldiv@dividend+3,w,c
  1165  00041E  A0D8               	btfss	status,0,c
  1166  000420  D009               	goto	l701
  1167  000422  5022               	movf	___aldiv@divisor,w,c
  1168  000424  5E1E               	subwf	___aldiv@dividend,f,c
  1169  000426  5023               	movf	___aldiv@divisor+1,w,c
  1170  000428  5A1F               	subwfb	___aldiv@dividend+1,f,c
  1171  00042A  5024               	movf	___aldiv@divisor+2,w,c
  1172  00042C  5A20               	subwfb	___aldiv@dividend+2,f,c
  1173  00042E  5025               	movf	___aldiv@divisor+3,w,c
  1174  000430  5A21               	subwfb	___aldiv@dividend+3,f,c
  1175  000432  8028               	bsf	___aldiv@quotient,0,c
  1176  000434                     l701:
  1177  000434  90D8               	bcf	status,0,c
  1178  000436  3225               	rrcf	___aldiv@divisor+3,f,c
  1179  000438  3224               	rrcf	___aldiv@divisor+2,f,c
  1180  00043A  3223               	rrcf	___aldiv@divisor+1,f,c
  1181  00043C  3222               	rrcf	___aldiv@divisor,f,c
  1182  00043E  2E26               	decfsz	___aldiv@counter,f,c
  1183  000440  D7E1               	goto	l693
  1184  000442                     l705:
  1185  000442  5027               	movf	___aldiv@sign,w,c
  1186  000444  B4D8               	btfsc	status,2,c
  1187  000446  D008               	goto	l709
  1188  000448  1E2B               	comf	___aldiv@quotient+3,f,c
  1189  00044A  1E2A               	comf	___aldiv@quotient+2,f,c
  1190  00044C  1E29               	comf	___aldiv@quotient+1,f,c
  1191  00044E  6C28               	negf	___aldiv@quotient,c
  1192  000450  0E00               	movlw	0
  1193  000452  2229               	addwfc	___aldiv@quotient+1,f,c
  1194  000454  222A               	addwfc	___aldiv@quotient+2,f,c
  1195  000456  222B               	addwfc	___aldiv@quotient+3,f,c
  1196  000458                     l709:
  1197  000458  C028  F01E         	movff	___aldiv@quotient,?___aldiv
  1198  00045C  C029  F01F         	movff	___aldiv@quotient+1,?___aldiv+1
  1199  000460  C02A  F020         	movff	___aldiv@quotient+2,?___aldiv+2
  1200  000464  C02B  F021         	movff	___aldiv@quotient+3,?___aldiv+3
  1201  000468  0012               	return	
  1202  00046A                     __end_of___aldiv:
  1203                           	opt stack 0
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           prodh	equ	0xFF4
  1209                           prodl	equ	0xFF3
  1210                           intcon	equ	0xFF2
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           postdec1	equ	0xFE5
  1214                           fsr1l	equ	0xFE1
  1215                           status	equ	0xFD8
  1216                           
  1217 ;; *************** function _isr *****************
  1218 ;; Defined at:
  1219 ;;		line 76 in file "C:/Users/FRED-NB/MPLABXProjects/18.10.2021.X/newmain.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1233 ;;      Params:         0       0       0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0
  1235 ;;      Temps:         17       0       0       0       0       0       0
  1236 ;;      Totals:        17       0       0       0       0       0       0
  1237 ;;Total ram usage:       17 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		Interrupt level 2
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	intcode
  1247  000008                     __pintcode:
  1248                           	opt stack 0
  1249  000008                     _isr:
  1250                           	opt stack 29
  1251                           
  1252                           ;incstack = 0
  1253  000008  CFFA F004          	movff	pclath,??_isr+3
  1254  00000C  CFFB F005          	movff	pclatu,??_isr+4
  1255  000010  CFE9 F006          	movff	fsr0l,??_isr+5
  1256  000014  CFEA F007          	movff	fsr0h,??_isr+6
  1257  000018  CFE1 F008          	movff	fsr1l,??_isr+7
  1258  00001C  CFE2 F009          	movff	fsr1h,??_isr+8
  1259  000020  CFD9 F00A          	movff	fsr2l,??_isr+9
  1260  000024  CFDA F00B          	movff	fsr2h,??_isr+10
  1261  000028  CFF3 F00C          	movff	prodl,??_isr+11
  1262  00002C  CFF4 F00D          	movff	prodh,??_isr+12
  1263  000030  CFF6 F00E          	movff	tblptrl,??_isr+13
  1264  000034  CFF7 F00F          	movff	tblptrh,??_isr+14
  1265  000038  CFF8 F010          	movff	tblptru,??_isr+15
  1266  00003C  CFF5 F011          	movff	tablat,??_isr+16
  1267                           
  1268                           ;newmain.c: 77: if (TMR0IF) {
  1269  000040  A4F2               	btfss	intcon,2,c	;volatile
  1270  000042  D041               	goto	i2l69
  1271                           
  1272                           ;newmain.c: 78: TMR0IF = 0;
  1273  000044  94F2               	bcf	intcon,2,c	;volatile
  1274                           
  1275                           ;newmain.c: 79: TMR0 = 6;
  1276  000046  0E00               	movlw	0
  1277  000048  6ED7               	movwf	4055,c	;volatile
  1278  00004A  0E06               	movlw	6
  1279  00004C  6ED6               	movwf	4054,c	;volatile
  1280                           
  1281                           ;newmain.c: 80: PORTA = 0x00;
  1282  00004E  0E00               	movlw	0
  1283  000050  6E80               	movwf	3968,c	;volatile
  1284                           
  1285                           ;newmain.c: 81: if (dig_cnt == 0) {
  1286  000052  664F               	tstfsz	_dig_cnt,c
  1287  000054  D003               	goto	i2l795
  1288                           
  1289                           ;newmain.c: 82: PORTD = seg_char[10];
  1290  000056  C05A  FF83         	movff	_seg_char+10,3971	;volatile
  1291                           
  1292                           ;newmain.c: 83: } else {
  1293  00005A  D023               	goto	i2l797
  1294  00005C                     i2l795:
  1295                           
  1296                           ;newmain.c: 84: PORTD = seg_char[digits[dig_cnt]] + 128 * (dig_cnt == 2);
  1297  00005C  504F               	movf	_dig_cnt,w,c
  1298  00005E  0D01               	mullw	1
  1299  000060  0E41               	movlw	low _digits
  1300  000062  24F3               	addwf	prodl,w,c
  1301  000064  6ED9               	movwf	fsr2l,c
  1302  000066  0E00               	movlw	high _digits
  1303  000068  20F4               	addwfc	prodh,w,c
  1304  00006A  6EDA               	movwf	fsr2h,c
  1305  00006C  50DF               	movf	indf2,w,c
  1306  00006E  6E01               	movwf	??_isr& (0+255),c
  1307  000070  5001               	movf	??_isr,w,c
  1308  000072  0D01               	mullw	1
  1309  000074  0E50               	movlw	low _seg_char
  1310  000076  24F3               	addwf	prodl,w,c
  1311  000078  6ED9               	movwf	fsr2l,c
  1312  00007A  0E00               	movlw	high _seg_char
  1313  00007C  20F4               	addwfc	prodh,w,c
  1314  00007E  6EDA               	movwf	fsr2h,c
  1315  000080  50DF               	movf	indf2,w,c
  1316  000082  6E02               	movwf	(??_isr+1)& (0+255),c
  1317  000084  504F               	movf	_dig_cnt,w,c
  1318  000086  0A02               	xorlw	2
  1319  000088  A4D8               	btfss	status,2,c
  1320  00008A  D002               	goto	i2u19_40
  1321  00008C  0E01               	movlw	1
  1322  00008E  D001               	goto	i2u19_46
  1323  000090                     i2u19_40:
  1324  000090  0E00               	movlw	0
  1325  000092                     i2u19_46:
  1326  000092  6E03               	movwf	(??_isr+2)& (0+255),c
  1327  000094  0E00               	movlw	0
  1328  000096  B003               	btfsc	??_isr+2,0,c
  1329  000098  0E80               	movlw	128
  1330  00009A  6E03               	movwf	??_isr+2,c
  1331  00009C  5003               	movf	??_isr+2,w,c
  1332  00009E  2402               	addwf	??_isr+1,w,c
  1333  0000A0  6E83               	movwf	3971,c	;volatile
  1334  0000A2                     i2l797:
  1335                           
  1336                           ;newmain.c: 85: }
  1337                           ;newmain.c: 87: PORTA = (0x01) << dig_cnt;
  1338  0000A2  C04F  F001         	movff	_dig_cnt,??_isr
  1339  0000A6  0E01               	movlw	1
  1340  0000A8  6E02               	movwf	(??_isr+1)& (0+255),c
  1341  0000AA  2A01               	incf	??_isr,f,c
  1342  0000AC  D002               	goto	i2u20_44
  1343  0000AE                     i2u20_45:
  1344  0000AE  90D8               	bcf	status,0,c
  1345  0000B0  3602               	rlcf	??_isr+1,f,c
  1346  0000B2                     i2u20_44:
  1347  0000B2  2E01               	decfsz	??_isr,f,c
  1348  0000B4  D7FC               	goto	i2u20_45
  1349  0000B6  5002               	movf	??_isr+1,w,c
  1350  0000B8  6E80               	movwf	3968,c	;volatile
  1351                           
  1352                           ;newmain.c: 89: dig_cnt++;
  1353  0000BA  2A4F               	incf	_dig_cnt,f,c
  1354                           
  1355                           ;newmain.c: 90: if (dig_cnt >= 4) {
  1356  0000BC  0E03               	movlw	3
  1357  0000BE  644F               	cpfsgt	_dig_cnt,c
  1358  0000C0  D002               	goto	i2l69
  1359                           
  1360                           ;newmain.c: 91: dig_cnt = 0;
  1361  0000C2  0E00               	movlw	0
  1362  0000C4  6E4F               	movwf	_dig_cnt,c
  1363  0000C6                     i2l69:
  1364  0000C6  C011  FFF5         	movff	??_isr+16,tablat
  1365  0000CA  C010  FFF8         	movff	??_isr+15,tblptru
  1366  0000CE  C00F  FFF7         	movff	??_isr+14,tblptrh
  1367  0000D2  C00E  FFF6         	movff	??_isr+13,tblptrl
  1368  0000D6  C00D  FFF4         	movff	??_isr+12,prodh
  1369  0000DA  C00C  FFF3         	movff	??_isr+11,prodl
  1370  0000DE  C00B  FFDA         	movff	??_isr+10,fsr2h
  1371  0000E2  C00A  FFD9         	movff	??_isr+9,fsr2l
  1372  0000E6  C009  FFE2         	movff	??_isr+8,fsr1h
  1373  0000EA  C008  FFE1         	movff	??_isr+7,fsr1l
  1374  0000EE  C007  FFEA         	movff	??_isr+6,fsr0h
  1375  0000F2  C006  FFE9         	movff	??_isr+5,fsr0l
  1376  0000F6  C005  FFFB         	movff	??_isr+4,pclatu
  1377  0000FA  C004  FFFA         	movff	??_isr+3,pclath
  1378  0000FE  0011               	retfie		f
  1379  000100                     __end_of_isr:
  1380                           	opt stack 0
  1381  0000                     pclatu	equ	0xFFB
  1382                           pclath	equ	0xFFA
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           prodh	equ	0xFF4
  1388                           prodl	equ	0xFF3
  1389                           intcon	equ	0xFF2
  1390                           postinc0	equ	0xFEE
  1391                           fsr0h	equ	0xFEA
  1392                           fsr0l	equ	0xFE9
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1h	equ	0xFE2
  1396                           fsr1l	equ	0xFE1
  1397                           indf2	equ	0xFDF
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           pclatu	equ	0xFFB
  1402                           pclath	equ	0xFFA
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           prodh	equ	0xFF4
  1408                           prodl	equ	0xFF3
  1409                           intcon	equ	0xFF2
  1410                           postinc0	equ	0xFEE
  1411                           fsr0h	equ	0xFEA
  1412                           fsr0l	equ	0xFE9
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1h	equ	0xFE2
  1416                           fsr1l	equ	0xFE1
  1417                           indf2	equ	0xFDF
  1418                           fsr2h	equ	0xFDA
  1419                           fsr2l	equ	0xFD9
  1420                           status	equ	0xFD8
  1421                           
  1422                           	psect	rparam
  1423  0000                     pclatu	equ	0xFFB
  1424                           pclath	equ	0xFFA
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           prodh	equ	0xFF4
  1430                           prodl	equ	0xFF3
  1431                           intcon	equ	0xFF2
  1432                           postinc0	equ	0xFEE
  1433                           fsr0h	equ	0xFEA
  1434                           fsr0l	equ	0xFE9
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           indf2	equ	0xFDF
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     64      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv
    ___lldiv->___wmul
    ___aldiv->___lmul

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    16      5    1328
                                             43 COMRAM    21    16      5
                            ___aldiv
                            ___lldiv
                            ___llmod
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     277
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     216
                                             17 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     191
                                             17 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     363
                                             23 COMRAM    13     5      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     281
                                             29 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___lldiv
     ___wmul (ARG)
   ___llmod
   ___lmul
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     40      5A       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       9        0.0%
DATA                 0      0      5A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 18 10:56:43 2021

                     u35 038A                       u45 03BA      ___wmul@multiplicand 0014  
                    l521 04DA                      l531 0540                      l701 0434  
                    l705 0442                      l721 0498                      l731 04CC  
                    l723 049C                      l709 0458                      l741 050A  
                    l661 0562                      l719 048C                      l743 050E  
                    l665 0576                      l691 0400                      l683 03D2  
                    l747 0532                      l739 04FE                      l693 0404  
                    l677 03A2                      l765 014A                      l689 03F4  
                    l777 01E2                      _GIE 007F97                      _cnt 0049  
                    _isr 0008                      prod 000FF3                      wreg 000FE8  
                   ?_isr 0001                     _PEIE 007F96                     i2l69 00C6  
                   _TMR0 000FD6                     _cnt2 004B                     _main 0104  
                   _temp 0045                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0100  
                  ??_isr 0001          __end_of___aldiv 046A                    ?_main 002C  
        __end_of___lldiv 04EC                    _T0CON 000FD5          __end_of___llmod 0552  
                  i2l795 005C                    i2l797 00A2                    _PORTA 000F80  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISD 000F95  
                  _TRISE 000F96      ___lmul@multiplicand 0016                    tablat 000FF5  
                  status 000FD8           __CFG_FOSC$HSHP 000000          __initialization 05A8  
           __end_of_main 036E                   ??_main 0031            __activetblptr 000000  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 0012  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _ANSELA 000F38  
                 _ANSELD 000F3B                   _ANSELE 000F3C                   _GODONE 007E11  
         __CFG_WDTEN$OFF 000000                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 ___lmul 0552                ??___aldiv 0026                   ___wmul 05DA  
                 _analog 004D                ??___lldiv 0020                ??___llmod 001A  
                 _digits 0041                   clear_0 05AE             __pdataCOMRAM 0050  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 05D4           __pcstackCOMRAM 0001  
                ?___lmul 0012                  ?___wmul 0012           ___lmul@product 001A  
                i2u20_44 00B2                  i2u20_45 00AE                  i2u19_40 0090  
                i2u19_46 0092                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 036E          __size_of___lmul 0056                  ___lldiv 046A  
        __size_of___wmul 0026                  ___llmod 04EC                  __pcinit 05A8  
                _dig_cnt 004F                  __ramtop 0600                  __ptext0 0104  
                __ptext1 05DA                  __ptext2 0552                  __ptext3 04EC  
                __ptext4 046A                  __ptext5 036E             __size_of_isr 00F8  
       ___aldiv@dividend 001E     end_of_initialization 05D4          ___lldiv@divisor 001C  
        ___lldiv@counter 0024         ___aldiv@quotient 0028                  postdec1 000FE5  
                postinc0 000FEE           __end_of___lmul 05A8           __end_of___wmul 0600  
          __pidataCOMRAM 0600      start_initialization 05A8              __end_of_isr 0100  
        ___llmod@divisor 0016          ___llmod@counter 001A                 ??___lmul 001A  
               ??___wmul 0016              __pbssCOMRAM 0041                __pintcode 0008  
               ?___aldiv 001E                 ?___lldiv 0018                 ?___llmod 0012  
        ___aldiv@divisor 0022          ___aldiv@counter 0026           ___wmul@product 0016  
             _ADCON0bits 000FC2        ___wmul@multiplier 0012        ___lmul@multiplier 0012  
              copy_data0 05C8                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___aldiv 00FC         __size_of___lldiv 0082         __size_of___llmod 0066  
          __size_of_main 026A                 _seg_char 0050                 main@argc 002C  
               main@argv 002E                 intlevel2 0000         ___lldiv@dividend 0018  
       ___lldiv@quotient 0020             ___aldiv@sign 0027  
